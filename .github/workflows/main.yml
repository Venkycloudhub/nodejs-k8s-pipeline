name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-app:$GITHUB_SHA .
        docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-app:$GITHUB_SHA

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Set up kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

    - name: Update deployment in Kubernetes
      run: |
        kubectl set image deployment/nodejs-app nodejs-app=${{ secrets.DOCKER_USERNAME }}/nodejs-app:$GITHUB_SHA
        kubectl rollout status deployment/nodejs-app

    - name: Send notification to Slack on success
      if: success()
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment succeeded!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send notification to Slack on failure
      if: failure()
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment failed!"}' ${{ secrets.SLACK_WEBHOOK_URL }}
